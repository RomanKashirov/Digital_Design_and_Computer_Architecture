;		PROGRAM 				ADDR	COMMENTS 							BINARY MACHINE CODE                     HEX CODE
MAIN 	SUB R0, R15, R15	;	00  	R0 = 0 			 			1110 000 0010 0 1111 0000 0000 0000 1111  		E04F000F
		ADD R2, R0, #5    	; 	04 		R2 = 5      	 			1110 001 0100 0 0000 0010 0000 0000 0101  		E2802005
		ADD R3, R0, #12    	; 	08 		R3 = 12          			1110 001 0100 0 0000 0011 0000 0000 1100  		E280300C
		SUB R7, R3, #9     	; 	0C 		R7 = 3           			1110 001 0010 0 0011 0111 0000 0000 1001  		E2437009
		ORR R4, R7, R2    	; 	10 		R4 = 3 OR 5 = 7  			1110 000 1100 0 0111 0100 0000 0000 0010  		E1874002
		AND R5, R3, R4    	; 	14 		R5 = 12 AND 7 = 4   		1110 000 0000 0 0011 0101 0000 0000 0100  		E0035004
		ADD R5, R5, R4     	; 	18 		R5 = 4 + 7 = 11     		1110 000 0100 0 0101 0101 0000 0000 0100  		E0855004
		SUBS R8, R5, R7    	; 	1C 		R8 = 11 - 3 = 8, set Flags  1110 000 0010 1 0101 1000 0000 0000 0111  		E0558007
		BEQ END 			; 	20 		shouldn't be taken          0000 1010 0000  0000 0000 0000 0000 1100 		0A00000C
		SUBS R8, R3, R4     ; 	24 		R8 = 12 - 7  = 5            1110 000 0010 1 0011 1000 0000 0000 0100  		E0538004
		BGE AROUND 			; 	28 		should be taken             1010 1010 0000  0000 0000 0000 0000 0000  		AA000000
		ADD R5, R0, #0      ;   2C		should be ski pped          1110 001 0100 0 0000 0101 0000 0000 0000  		E2805000
AROUND  SUBS R8, R7, R2 	;   30 		R8 = 3 - 5 = -2, set Flags  1110 000 0010 1 0111 1000 0000 0000 0010  		E0578002
        ADDLT R7, R5, #1    ;   34		R7 = 11 + 1 = 12 			1011 001 0100 0 0101 0111 0000 0000 0001 		B2857001
		SUB R7, R7, R2      ;   38 		R7 = 12 - 5 = 7 			1110 000 0010 0 0111 0111 0000 0000 0010  		E0477002
		STR R7, [R3, #84]   ;   3C 		mem[12+84] = 7 				1110 010 1100 0 0011 0111 0000 0101 0100  		E5837054
		LDR R2, [R0, #96]   ; 	40  	R2 = mem[96] = 7 			1110 010 1100 1 0000 0010 0000 0110 0000  		E5902060
		ADD R15, R15, R0 	; 	44 		PC = PC+8 (skips next)      1110 000 0100 0 1111 1111 0000 0000 0000 		E08FF000
		ADD R2, R0, #14     ;   48      shouldn't happen            1110 001 0100 0 0000 0010 0000 0000 0001  		E280200E
		B END 				; 	4C 		always taken 				1110 1010 0000  0000 0000 0000 0000 0001 		EA000001
		ADD R2, R0, #13     ; 	50 		shouldn't happen 			1110 001 0100 0 0000 0010 0000 0000 0001  		E280200D
		ADD R2, R0, #10     ; 	54 		shouldn't happen 			1110 001 0100 0 0000 0010 0000 0000 0001  		E280200A
END 	CMP R5, R7			;   58		11 - 7 = 4, set Flags														E1550007
		SUBLT R2, R2, #1	;	5C		shouldn't happen															B2422001	
		ADDGE R2, R2, #3	;	60		R2 = 7 + 3 = 10																A2822003
		SUB R2, R2, R3, LSR #2 ; 64		R2 = 10 - (12 >> 2) = 7														E0422123
		ADD R2, R0, R2, LSL #1 ; 68		R2 = R2 << 1 = 14															E0802082
		SUB R7, R0, #20		   ; 6C		R7 = -20																	E2407014
		ADD R2, R2, R7, ASR #1 ; 70		R2 = 14 + (-20 ASR 1) = 4													E08220C7
		ADD R2, R0, R2, ROR #22 ; 74	R2 = R2 >>> 22 = 4096														E0802B62
		TST R2, R7				; 78	Z = 0, N = 0																E1120007
		ADDNE R2, R2, #1		; 8c	R2 = R2 + 1 = 4097															12822001
		TST R2, R3				; 90	Z = 1, N = 0																E1120003
		ADDNE R2, R2, #3		; 94	shouldn't happen															12822003
		ADDEQ R2, R2, #2		; 98	R2 = R2 + 2 = 4099															02822002
		SUBMI R2, R2, #10		; 9c	shouldn't happen															4242200A
		TST R8, R7				; 100	Z = 0, N = 1																E1180007
		SUBMI R2, R2, #40		; 104	R2 = R2 - 40 = 4059															42422028
		LSL R2, R2, #1			; 108	R2 = R2 << 1 = 8118															E1A02082
		ADD R2, R2, #10			; 10c	R2 = R2 + 10 = 8128															E282200A
		LSR R2, R2, #6			; 110 	R2 = R2 >> 6 = 127															E1A02322
		STR R2,[R0,#100]  		; 110		mem[100] = 7															E5802064 
		
		


